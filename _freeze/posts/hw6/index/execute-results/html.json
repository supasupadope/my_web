{
  "hash": "4ae2c87cac04a22ca7d0e2b4e892d0b9",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"homework6\"\nauthor: \"정한렬\"\ndate: \"2024-07-30\"\ncategories: [bigdata]\njupyter: python3\n---\n\n\n![](youn6.jpg)\n\n## 챕터 9-2 설문조사 그래프에서 각 성별 95% 신뢰구간 계산후 그리기 norm.ppf() 사용해서 그릴 것. 모분산은 표본 분산을 사용해서 추정, 위 아래 수직 막대기로 표시 (아래 그림 참조)\n\n::: {#c155520c .cell execution_count=1}\n``` {.python .cell-code}\n#!pip install pyreadstat\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\n\n\nraw_welfare = pd.read_spss(('data/Koweps_hpwc14_2019_beta2.sav'))\nraw_welfare\n\nwelfare = raw_welfare.copy()\n\nwelfare = welfare.rename(\n    columns = {'h14_g3'     : 'sex',\n               'h14_g4'     : 'birth',\n               'h14_g10'    : 'marriage_type',\n               'h14_g11'    : 'religion',\n               'p1402_8aq1' : 'income',\n               'h14_eco9'   : 'code_job',\n               'h14_reg7'   : 'code_region'})\n               \nwelfare['sex'] = np.where(welfare['sex'] == 1, 'male', 'female')\nwelfare['sex'].value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\nsex\nfemale    7913\nmale      6505\nName: count, dtype: int64\n```\n:::\n:::\n\n\n::: {#2ec23b90 .cell execution_count=2}\n``` {.python .cell-code}\nwelfare['income'].describe()\nwelfare['income'].isna().sum()\n\nsex_income = welfare.dropna(subset = 'income') \\\n                    .groupby('sex', as_index = False) \\\n                    .agg(mean_income = ('income', 'mean'),\n                         var_income = (\"income\",'var'),\n                         len_income = (\"income\",\"count\"))\n                         \nsex_income[\"left_ci\"] = sex_income[\"mean_income\"]- (norm.ppf(0.975, 0, 1) * np.sqrt(sex_income[\"var_income\"]/(sex_income[\"len_income\"])))\n\nsex_income[\"right_ci\"] = sex_income[\"mean_income\"] + (norm.ppf(0.975, 0, 1) * np.sqrt(sex_income[\"var_income\"]/(sex_income[\"len_income\"])))\n\nsex_income[\"left_ci\"]\nsex_income[\"right_ci\"]\n\nsns.barplot(data = sex_income, x = 'sex', y = 'mean_income', hue = 'sex')\n\nplt.vlines(x=0, ymin=sex_income['left_ci'][0], ymax=sex_income['right_ci'][0], color='black', linewidth=4)\nplt.vlines(x=1, ymin=sex_income['left_ci'][1], ymax=sex_income['right_ci'][1], color='black', linewidth=4)\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}