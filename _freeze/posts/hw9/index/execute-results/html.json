{
  "hash": "5a3a5166af99abe65e2241daeb11705c",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"homework9\"\nauthor: \"정한렬\"\ndate: \"2024-09-10\"\ncategories: [bigdata]\njupyter: python3\n---\n\n\n![](youn66.gif)\n\n# 문제 1.데이터를 로드하고, 로지스틱 회귀모델을 적합하고, 회귀 표를 작성하세요.\n\n::: {#b7df16f8 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\ndf = pd.read_csv(\"./data/leukemia_remission.csv\")\n\nimport statsmodels.api as sm\nimport pandas as pd\nimport numpy as np\nimport sklearn\nfrom scipy.stats import chi2\n\nmodel = sm.formula.logit(\"REMISS ~ CELL + SMEAR + INFIL + LI + BLAST + TEMP\",data=df).fit()\nprint(model.summary())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimization terminated successfully.\n         Current function value: 0.399886\n         Iterations 10\n                           Logit Regression Results                           \n==============================================================================\nDep. Variable:                 REMISS   No. Observations:                   27\nModel:                          Logit   Df Residuals:                       20\nMethod:                           MLE   Df Model:                            6\nDate:                Tue, 10 Sep 2024   Pseudo R-squ.:                  0.3718\nTime:                        11:01:37   Log-Likelihood:                -10.797\nconverged:                       True   LL-Null:                       -17.186\nCovariance Type:            nonrobust   LLR p-value:                   0.04670\n==============================================================================\n                 coef    std err          z      P>|z|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept     64.2581     74.965      0.857      0.391     -82.670     211.187\nCELL          30.8301     52.135      0.591      0.554     -71.353     133.013\nSMEAR         24.6863     61.526      0.401      0.688     -95.903     145.275\nINFIL        -24.9745     65.281     -0.383      0.702    -152.923     102.974\nLI             4.3605      2.658      1.641      0.101      -0.849       9.570\nBLAST         -0.0115      2.266     -0.005      0.996      -4.453       4.430\nTEMP        -100.1734     77.753     -1.288      0.198    -252.567      52.220\n==============================================================================\n\nPossibly complete quasi-separation: A fraction 0.11 of observations can be\nperfectly predicted. This might indicate that there is complete\nquasi-separation. In this case some parameters will not be identified.\n```\n:::\n:::\n\n\n# 문제 2.해당 모델은 통계적으로 유의한가요? 그 이유를 검정통계량를 사용해서 설명하시오.\n\n::: {#6d506fe9 .cell execution_count=2}\n``` {.python .cell-code}\nllr = -2 * (-17.186 + 10.797) # 검정 통계량  12.78\n1 - chi2.cdf(llr, 6) # p-value인 0.0467\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\nnp.float64(0.04669995098322843)\n```\n:::\n:::\n\n\n### 유의수준 0.05하에서 LLR p-value가 0.0467로 유의수준보다 작으므로 통계적으로 유의하다.\n\n\n\n# 문제 3.유의수준이 0.2를 기준으로 통계적으로 유의한 변수는 몇개이며, 어느 변수 인가요?\n\n### P>|z|가 유의수준 0.2보다 작은 변수는 LI, TEMP다.\n\n# 문제 4. 다음 환자에 대한 오즈는 얼마인가요?\n\n::: {#37b73194 .cell execution_count=3}\n``` {.python .cell-code}\n#CELL (골수의 세포성): 65%\n\n#SMEAR (골수편의 백혈구 비율): 45%\n\n#INFIL (골수의 백혈병 세포 침투 비율): 55%\n\n#LI (골수 백혈병 세포의 라벨링 인덱스): 1.2\n\n#BLAST (말초혈액의 백혈병 세포 수): 1.1세포/μL\n\n#TEMP (치료 시작 전 최고 체온): 0.9\n\n#오즈값구하기 0.0381748712694388\n\nmy_odds = np.exp(64.2581 +30.8301*0.65 + 24.686316*0.45 -24.9745*0.55 +4.3605*1.2 -0.0115*1.1 -100.1734*0.9)\nprint(my_odds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n0.0381748712694388\n```\n:::\n:::\n\n\n# 문제 5. 위 환자의 혈액에서 백혈병 세포가 관측되지 않은 확률은 얼마인가요?\n\n::: {#4468b4dc .cell execution_count=4}\n``` {.python .cell-code}\nmy_odds / (my_odds+1)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nnp.float64(0.036771137816849764)\n```\n:::\n:::\n\n\n### 백혈병 관측되지 않을 확률: 0.036771137816849764\n\n\n# 문제 6. TEMP 변수의 계수는 얼마이며, 해당 계수를 사용해서 TEMP 변수가 백혈병 치료에 대한 영향을 설명하시오.\n\n### TEMP 변수의 계수는 -100.1734이다,체온이 1 올라가면 로그 오즈는 100.1734만큼 감소하며, 백혈병 상태에 도달할 가능성이 크게 줄어든다\n\n# 문제 7. CELL 변수의 99% 오즈비에 대한 신뢰구간을 구하시오.\n\n::: {#b6373063 .cell execution_count=5}\n``` {.python .cell-code}\ncell_beta = 30.830\nz = 2.58\nstd_err = 52.135\n\nupper = cell_beta + z * std_err #  165.3383\nlower = cell_beta - z * std_err # -103.6783\n\nup = np.exp(upper) \nlow = np.exp(lower)\nprint(up, low)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n6.390154186383071e+71 9.399103174215862e-46\n```\n:::\n:::\n\n\n# 문제 8. 주어진 데이터에 대하여 로지스틱 회귀 모델의 예측 확률을 구한 후, 50% 이상인 경우 1로 처리하여, 혼동 행렬를 구하시오.\n\n::: {#77f8589e .cell execution_count=6}\n``` {.python .cell-code}\nfrom sklearn.metrics import confusion_matrix\n\n# 1. 모델을 사용하여 예측 확률을 계산\npred_probs = model.predict(df)\n\n# 2. 50% 기준으로 이진화 (0 또는 1로 변환)\npredictions = [1 if prob >= 0.5 else 0 for prob in pred_probs]\n\n# 3. 실제 값 (df['REMISS'])과 예측 값 (predictions) 비교하여 혼동 행렬 계산\nconf_matrix = confusion_matrix(df['REMISS'], predictions)\n\n# 혼동 행렬 출력\nconf_matrix\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\narray([[15,  3],\n       [ 4,  5]])\n```\n:::\n:::\n\n\n# 문제 9. 해당 모델의 Accuracy는 얼마인가요?\n\n### (15+5)/(15+3+4+5) = 0.74\n\n# 문제 10. 해당 모델의 F1 Score를 구하세요.\n\n::: {#f801ef9a .cell execution_count=7}\n``` {.python .cell-code}\nprecision = 5/(5+3)\nrecall = 5/(5+4)\nF1_score = 2 * ( precision*recall /(precision + recall))\nprint(F1_score)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n0.5882352941176471\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}